# Configuration containing list of application servers
upstream app_servers {
	server web:8000 fail_timeout=0;
}

upstream sentry_server {
	server sentry:9000 fail_timeout=0;
}

# Configuration for Nginx
server {

	# Running port
	listen 80;

	include snippets/self-signed.conf;
	include snippets/ssl-params.conf;

	client_max_body_size 4G;
	large_client_header_buffers 4 16k;

	server_name opentranslationtools.org;

	keepalive_timeout 5;

	root /var/www/html/tE-backend/tRecorderApi/;

	location /generate_204 {
		return 302 https://opentranslationtools.org;
	}

	location / {
		# checks for static file, if not found proxy to app
		try_files $uri @proxy_to_app;
	}
	
	location ~* \.(py|jar) { 
        deny all; 
    }
	
    location ~* \.(wav|mp3|zip|tr)$ {
        add_header Access-Control-Allow-Origin *;
        #deny all;
    }

	location @proxy_to_app {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		# enable this if and only if you use HTTPS
		# proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Host $http_host;
		# we don't want nginx trying to do something clever with
		# redirects, we set the Host: header above already.
		proxy_redirect off;
		proxy_read_timeout 3600;
		proxy_connect_timeout 3600;
		proxy_pass http://app_servers;
	}
}

server {
	listen 81;
	
	server_name sentry;
	
	location / {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://sentry_server;
	}
}